// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: proto/exchange.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *GetTradesRequest) Reset() {
	*x = GetTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradesRequest) ProtoMessage() {}

func (x *GetTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradesRequest.ProtoReflect.Descriptor instead.
func (*GetTradesRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *GetTradesRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price    float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity float64 `protobuf:"fixed64,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Symbol   string  `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Time     int64   `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *Trade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Trade) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Trade) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GetTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *GetTradesResponse) Reset() {
	*x = GetTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradesResponse) ProtoMessage() {}

func (x *GetTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradesResponse.ProtoReflect.Descriptor instead.
func (*GetTradesResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{2}
}

func (x *GetTradesResponse) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type GetWalletBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange    string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	AccountType string `protobuf:"bytes,2,opt,name=accountType,proto3" json:"accountType,omitempty"`
}

func (x *GetWalletBalanceRequest) Reset() {
	*x = GetWalletBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceRequest) ProtoMessage() {}

func (x *GetWalletBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{3}
}

func (x *GetWalletBalanceRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetWalletBalanceRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type WalletBalanceCoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableToBorrow   string `protobuf:"bytes,1,opt,name=availableToBorrow,proto3" json:"availableToBorrow,omitempty"`
	Bonus               string `protobuf:"bytes,2,opt,name=bonus,proto3" json:"bonus,omitempty"`
	AccruedInterest     string `protobuf:"bytes,3,opt,name=accruedInterest,proto3" json:"accruedInterest,omitempty"`
	AvailableToWithdraw string `protobuf:"bytes,4,opt,name=availableToWithdraw,proto3" json:"availableToWithdraw,omitempty"`
	TotalOrderIM        string `protobuf:"bytes,5,opt,name=totalOrderIM,proto3" json:"totalOrderIM,omitempty"`
	Equity              string `protobuf:"bytes,6,opt,name=equity,proto3" json:"equity,omitempty"`
	TotalPositionMM     string `protobuf:"bytes,7,opt,name=totalPositionMM,proto3" json:"totalPositionMM,omitempty"`
	UsdValue            string `protobuf:"bytes,8,opt,name=usdValue,proto3" json:"usdValue,omitempty"`
	UnrealisedPnl       string `protobuf:"bytes,9,opt,name=unrealisedPnl,proto3" json:"unrealisedPnl,omitempty"`
	CollateralSwitch    bool   `protobuf:"varint,10,opt,name=collateralSwitch,proto3" json:"collateralSwitch,omitempty"`
	SpotHedgingQty      string `protobuf:"bytes,11,opt,name=spotHedgingQty,proto3" json:"spotHedgingQty,omitempty"`
	BorrowAmount        string `protobuf:"bytes,12,opt,name=borrowAmount,proto3" json:"borrowAmount,omitempty"`
	TotalPositionIM     string `protobuf:"bytes,13,opt,name=totalPositionIM,proto3" json:"totalPositionIM,omitempty"`
	WalletBalance       string `protobuf:"bytes,14,opt,name=walletBalance,proto3" json:"walletBalance,omitempty"`
	CumRealisedPnl      string `protobuf:"bytes,15,opt,name=cumRealisedPnl,proto3" json:"cumRealisedPnl,omitempty"`
	Locked              string `protobuf:"bytes,16,opt,name=locked,proto3" json:"locked,omitempty"`
	MarginCollateral    bool   `protobuf:"varint,17,opt,name=marginCollateral,proto3" json:"marginCollateral,omitempty"`
	Coin                string `protobuf:"bytes,18,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *WalletBalanceCoin) Reset() {
	*x = WalletBalanceCoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceCoin) ProtoMessage() {}

func (x *WalletBalanceCoin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceCoin.ProtoReflect.Descriptor instead.
func (*WalletBalanceCoin) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{4}
}

func (x *WalletBalanceCoin) GetAvailableToBorrow() string {
	if x != nil {
		return x.AvailableToBorrow
	}
	return ""
}

func (x *WalletBalanceCoin) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

func (x *WalletBalanceCoin) GetAccruedInterest() string {
	if x != nil {
		return x.AccruedInterest
	}
	return ""
}

func (x *WalletBalanceCoin) GetAvailableToWithdraw() string {
	if x != nil {
		return x.AvailableToWithdraw
	}
	return ""
}

func (x *WalletBalanceCoin) GetTotalOrderIM() string {
	if x != nil {
		return x.TotalOrderIM
	}
	return ""
}

func (x *WalletBalanceCoin) GetEquity() string {
	if x != nil {
		return x.Equity
	}
	return ""
}

func (x *WalletBalanceCoin) GetTotalPositionMM() string {
	if x != nil {
		return x.TotalPositionMM
	}
	return ""
}

func (x *WalletBalanceCoin) GetUsdValue() string {
	if x != nil {
		return x.UsdValue
	}
	return ""
}

func (x *WalletBalanceCoin) GetUnrealisedPnl() string {
	if x != nil {
		return x.UnrealisedPnl
	}
	return ""
}

func (x *WalletBalanceCoin) GetCollateralSwitch() bool {
	if x != nil {
		return x.CollateralSwitch
	}
	return false
}

func (x *WalletBalanceCoin) GetSpotHedgingQty() string {
	if x != nil {
		return x.SpotHedgingQty
	}
	return ""
}

func (x *WalletBalanceCoin) GetBorrowAmount() string {
	if x != nil {
		return x.BorrowAmount
	}
	return ""
}

func (x *WalletBalanceCoin) GetTotalPositionIM() string {
	if x != nil {
		return x.TotalPositionIM
	}
	return ""
}

func (x *WalletBalanceCoin) GetWalletBalance() string {
	if x != nil {
		return x.WalletBalance
	}
	return ""
}

func (x *WalletBalanceCoin) GetCumRealisedPnl() string {
	if x != nil {
		return x.CumRealisedPnl
	}
	return ""
}

func (x *WalletBalanceCoin) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *WalletBalanceCoin) GetMarginCollateral() bool {
	if x != nil {
		return x.MarginCollateral
	}
	return false
}

func (x *WalletBalanceCoin) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

type WalletBalanceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalEquity            string               `protobuf:"bytes,1,opt,name=totalEquity,proto3" json:"totalEquity,omitempty"`
	AccountIMRate          string               `protobuf:"bytes,2,opt,name=accountIMRate,proto3" json:"accountIMRate,omitempty"`
	TotalMarginBalance     string               `protobuf:"bytes,3,opt,name=totalMarginBalance,proto3" json:"totalMarginBalance,omitempty"`
	TotalInitialMargin     string               `protobuf:"bytes,4,opt,name=totalInitialMargin,proto3" json:"totalInitialMargin,omitempty"`
	AccountType            string               `protobuf:"bytes,5,opt,name=accountType,proto3" json:"accountType,omitempty"`
	TotalAvailableBalance  string               `protobuf:"bytes,6,opt,name=totalAvailableBalance,proto3" json:"totalAvailableBalance,omitempty"`
	AccountMMRate          string               `protobuf:"bytes,7,opt,name=accountMMRate,proto3" json:"accountMMRate,omitempty"`
	TotalPerpUPL           string               `protobuf:"bytes,8,opt,name=totalPerpUPL,proto3" json:"totalPerpUPL,omitempty"`
	TotalWalletBalance     string               `protobuf:"bytes,9,opt,name=totalWalletBalance,proto3" json:"totalWalletBalance,omitempty"`
	AccountLTV             string               `protobuf:"bytes,10,opt,name=accountLTV,proto3" json:"accountLTV,omitempty"`
	TotalMaintenanceMargin string               `protobuf:"bytes,11,opt,name=totalMaintenanceMargin,proto3" json:"totalMaintenanceMargin,omitempty"`
	Coin                   []*WalletBalanceCoin `protobuf:"bytes,12,rep,name=coin,proto3" json:"coin,omitempty"`
}

func (x *WalletBalanceList) Reset() {
	*x = WalletBalanceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceList) ProtoMessage() {}

func (x *WalletBalanceList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceList.ProtoReflect.Descriptor instead.
func (*WalletBalanceList) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{5}
}

func (x *WalletBalanceList) GetTotalEquity() string {
	if x != nil {
		return x.TotalEquity
	}
	return ""
}

func (x *WalletBalanceList) GetAccountIMRate() string {
	if x != nil {
		return x.AccountIMRate
	}
	return ""
}

func (x *WalletBalanceList) GetTotalMarginBalance() string {
	if x != nil {
		return x.TotalMarginBalance
	}
	return ""
}

func (x *WalletBalanceList) GetTotalInitialMargin() string {
	if x != nil {
		return x.TotalInitialMargin
	}
	return ""
}

func (x *WalletBalanceList) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *WalletBalanceList) GetTotalAvailableBalance() string {
	if x != nil {
		return x.TotalAvailableBalance
	}
	return ""
}

func (x *WalletBalanceList) GetAccountMMRate() string {
	if x != nil {
		return x.AccountMMRate
	}
	return ""
}

func (x *WalletBalanceList) GetTotalPerpUPL() string {
	if x != nil {
		return x.TotalPerpUPL
	}
	return ""
}

func (x *WalletBalanceList) GetTotalWalletBalance() string {
	if x != nil {
		return x.TotalWalletBalance
	}
	return ""
}

func (x *WalletBalanceList) GetAccountLTV() string {
	if x != nil {
		return x.AccountLTV
	}
	return ""
}

func (x *WalletBalanceList) GetTotalMaintenanceMargin() string {
	if x != nil {
		return x.TotalMaintenanceMargin
	}
	return ""
}

func (x *WalletBalanceList) GetCoin() []*WalletBalanceCoin {
	if x != nil {
		return x.Coin
	}
	return nil
}

type WalletBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32                `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string               `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	List    []*WalletBalanceList `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	Time    int64                `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *WalletBalanceResponse) Reset() {
	*x = WalletBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceResponse) ProtoMessage() {}

func (x *WalletBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceResponse.ProtoReflect.Descriptor instead.
func (*WalletBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{6}
}

func (x *WalletBalanceResponse) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *WalletBalanceResponse) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *WalletBalanceResponse) GetList() []*WalletBalanceList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *WalletBalanceResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GetWalletBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance *WalletBalanceResponse `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetWalletBalanceResponse) Reset() {
	*x = GetWalletBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceResponse) ProtoMessage() {}

func (x *GetWalletBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{7}
}

func (x *GetWalletBalanceResponse) GetBalance() *WalletBalanceResponse {
	if x != nil {
		return x.Balance
	}
	return nil
}

var File_proto_exchange_proto protoreflect.FileDescriptor

var file_proto_exchange_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0x2e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0x75, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa3,
	0x05, 0x0a, 0x11, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x6f, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x42, 0x6f, 0x72, 0x72,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x72,
	0x75, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x4d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x4d, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x4d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x4d, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c,
	0x69, 0x73, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70, 0x6f, 0x74,
	0x48, 0x65, 0x64, 0x67, 0x69, 0x6e, 0x67, 0x51, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x70, 0x6f, 0x74, 0x48, 0x65, 0x64, 0x67, 0x69, 0x6e, 0x67, 0x51, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x4d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x4d, 0x12, 0x24,
	0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x6d, 0x52, 0x65, 0x61, 0x6c, 0x69,
	0x73, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75,
	0x6d, 0x52, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x22, 0x96, 0x04, 0x0a, 0x11, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x4d, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x4d, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x4d, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x4d, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x70, 0x55, 0x50, 0x4c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x72,
	0x70, 0x55, 0x50, 0x4c, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x54, 0x56, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x54, 0x56, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x8e, 0x01,
	0x0a, 0x15, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x55,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x32, 0xb2, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_exchange_proto_rawDescOnce sync.Once
	file_proto_exchange_proto_rawDescData = file_proto_exchange_proto_rawDesc
)

func file_proto_exchange_proto_rawDescGZIP() []byte {
	file_proto_exchange_proto_rawDescOnce.Do(func() {
		file_proto_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_exchange_proto_rawDescData)
	})
	return file_proto_exchange_proto_rawDescData
}

var file_proto_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_exchange_proto_goTypes = []interface{}{
	(*GetTradesRequest)(nil),         // 0: exchange.GetTradesRequest
	(*Trade)(nil),                    // 1: exchange.Trade
	(*GetTradesResponse)(nil),        // 2: exchange.GetTradesResponse
	(*GetWalletBalanceRequest)(nil),  // 3: exchange.GetWalletBalanceRequest
	(*WalletBalanceCoin)(nil),        // 4: exchange.WalletBalanceCoin
	(*WalletBalanceList)(nil),        // 5: exchange.WalletBalanceList
	(*WalletBalanceResponse)(nil),    // 6: exchange.WalletBalanceResponse
	(*GetWalletBalanceResponse)(nil), // 7: exchange.GetWalletBalanceResponse
}
var file_proto_exchange_proto_depIdxs = []int32{
	1, // 0: exchange.GetTradesResponse.trades:type_name -> exchange.Trade
	4, // 1: exchange.WalletBalanceList.coin:type_name -> exchange.WalletBalanceCoin
	5, // 2: exchange.WalletBalanceResponse.list:type_name -> exchange.WalletBalanceList
	6, // 3: exchange.GetWalletBalanceResponse.balance:type_name -> exchange.WalletBalanceResponse
	0, // 4: exchange.ExchangeService.GetTrades:input_type -> exchange.GetTradesRequest
	3, // 5: exchange.ExchangeService.GetWalletBalance:input_type -> exchange.GetWalletBalanceRequest
	2, // 6: exchange.ExchangeService.GetTrades:output_type -> exchange.GetTradesResponse
	7, // 7: exchange.ExchangeService.GetWalletBalance:output_type -> exchange.GetWalletBalanceResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_exchange_proto_init() }
func file_proto_exchange_proto_init() {
	if File_proto_exchange_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_exchange_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceCoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_exchange_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_exchange_proto_goTypes,
		DependencyIndexes: file_proto_exchange_proto_depIdxs,
		MessageInfos:      file_proto_exchange_proto_msgTypes,
	}.Build()
	File_proto_exchange_proto = out.File
	file_proto_exchange_proto_rawDesc = nil
	file_proto_exchange_proto_goTypes = nil
	file_proto_exchange_proto_depIdxs = nil
}
