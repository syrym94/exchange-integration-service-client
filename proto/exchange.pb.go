// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: proto/exchange.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *GetTradesRequest) Reset() {
	*x = GetTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradesRequest) ProtoMessage() {}

func (x *GetTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradesRequest.ProtoReflect.Descriptor instead.
func (*GetTradesRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{0}
}

func (x *GetTradesRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price    float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity float64 `protobuf:"fixed64,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Symbol   string  `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Time     int64   `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{1}
}

func (x *Trade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Trade) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Trade) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type GetTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *GetTradesResponse) Reset() {
	*x = GetTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradesResponse) ProtoMessage() {}

func (x *GetTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradesResponse.ProtoReflect.Descriptor instead.
func (*GetTradesResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{2}
}

func (x *GetTradesResponse) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type GetWalletBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange    string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	AccountType string `protobuf:"bytes,2,opt,name=accountType,proto3" json:"accountType,omitempty"`
}

func (x *GetWalletBalanceRequest) Reset() {
	*x = GetWalletBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceRequest) ProtoMessage() {}

func (x *GetWalletBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{3}
}

func (x *GetWalletBalanceRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *GetWalletBalanceRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type WalletBalanceCoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableToBorrow   string `protobuf:"bytes,1,opt,name=availableToBorrow,proto3" json:"availableToBorrow,omitempty"`
	Bonus               string `protobuf:"bytes,2,opt,name=bonus,proto3" json:"bonus,omitempty"`
	AccruedInterest     string `protobuf:"bytes,3,opt,name=accruedInterest,proto3" json:"accruedInterest,omitempty"`
	AvailableToWithdraw string `protobuf:"bytes,4,opt,name=availableToWithdraw,proto3" json:"availableToWithdraw,omitempty"`
	TotalOrderIM        string `protobuf:"bytes,5,opt,name=totalOrderIM,proto3" json:"totalOrderIM,omitempty"`
	Equity              string `protobuf:"bytes,6,opt,name=equity,proto3" json:"equity,omitempty"`
	TotalPositionMM     string `protobuf:"bytes,7,opt,name=totalPositionMM,proto3" json:"totalPositionMM,omitempty"`
	UsdValue            string `protobuf:"bytes,8,opt,name=usdValue,proto3" json:"usdValue,omitempty"`
	UnrealisedPnl       string `protobuf:"bytes,9,opt,name=unrealisedPnl,proto3" json:"unrealisedPnl,omitempty"`
	CollateralSwitch    bool   `protobuf:"varint,10,opt,name=collateralSwitch,proto3" json:"collateralSwitch,omitempty"`
	SpotHedgingQty      string `protobuf:"bytes,11,opt,name=spotHedgingQty,proto3" json:"spotHedgingQty,omitempty"`
	BorrowAmount        string `protobuf:"bytes,12,opt,name=borrowAmount,proto3" json:"borrowAmount,omitempty"`
	TotalPositionIM     string `protobuf:"bytes,13,opt,name=totalPositionIM,proto3" json:"totalPositionIM,omitempty"`
	WalletBalance       string `protobuf:"bytes,14,opt,name=walletBalance,proto3" json:"walletBalance,omitempty"`
	CumRealisedPnl      string `protobuf:"bytes,15,opt,name=cumRealisedPnl,proto3" json:"cumRealisedPnl,omitempty"`
	Locked              string `protobuf:"bytes,16,opt,name=locked,proto3" json:"locked,omitempty"`
	MarginCollateral    bool   `protobuf:"varint,17,opt,name=marginCollateral,proto3" json:"marginCollateral,omitempty"`
	Coin                string `protobuf:"bytes,18,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *WalletBalanceCoin) Reset() {
	*x = WalletBalanceCoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceCoin) ProtoMessage() {}

func (x *WalletBalanceCoin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceCoin.ProtoReflect.Descriptor instead.
func (*WalletBalanceCoin) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{4}
}

func (x *WalletBalanceCoin) GetAvailableToBorrow() string {
	if x != nil {
		return x.AvailableToBorrow
	}
	return ""
}

func (x *WalletBalanceCoin) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

func (x *WalletBalanceCoin) GetAccruedInterest() string {
	if x != nil {
		return x.AccruedInterest
	}
	return ""
}

func (x *WalletBalanceCoin) GetAvailableToWithdraw() string {
	if x != nil {
		return x.AvailableToWithdraw
	}
	return ""
}

func (x *WalletBalanceCoin) GetTotalOrderIM() string {
	if x != nil {
		return x.TotalOrderIM
	}
	return ""
}

func (x *WalletBalanceCoin) GetEquity() string {
	if x != nil {
		return x.Equity
	}
	return ""
}

func (x *WalletBalanceCoin) GetTotalPositionMM() string {
	if x != nil {
		return x.TotalPositionMM
	}
	return ""
}

func (x *WalletBalanceCoin) GetUsdValue() string {
	if x != nil {
		return x.UsdValue
	}
	return ""
}

func (x *WalletBalanceCoin) GetUnrealisedPnl() string {
	if x != nil {
		return x.UnrealisedPnl
	}
	return ""
}

func (x *WalletBalanceCoin) GetCollateralSwitch() bool {
	if x != nil {
		return x.CollateralSwitch
	}
	return false
}

func (x *WalletBalanceCoin) GetSpotHedgingQty() string {
	if x != nil {
		return x.SpotHedgingQty
	}
	return ""
}

func (x *WalletBalanceCoin) GetBorrowAmount() string {
	if x != nil {
		return x.BorrowAmount
	}
	return ""
}

func (x *WalletBalanceCoin) GetTotalPositionIM() string {
	if x != nil {
		return x.TotalPositionIM
	}
	return ""
}

func (x *WalletBalanceCoin) GetWalletBalance() string {
	if x != nil {
		return x.WalletBalance
	}
	return ""
}

func (x *WalletBalanceCoin) GetCumRealisedPnl() string {
	if x != nil {
		return x.CumRealisedPnl
	}
	return ""
}

func (x *WalletBalanceCoin) GetLocked() string {
	if x != nil {
		return x.Locked
	}
	return ""
}

func (x *WalletBalanceCoin) GetMarginCollateral() bool {
	if x != nil {
		return x.MarginCollateral
	}
	return false
}

func (x *WalletBalanceCoin) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

type WalletBalanceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalEquity            string               `protobuf:"bytes,1,opt,name=totalEquity,proto3" json:"totalEquity,omitempty"`
	AccountIMRate          string               `protobuf:"bytes,2,opt,name=accountIMRate,proto3" json:"accountIMRate,omitempty"`
	TotalMarginBalance     string               `protobuf:"bytes,3,opt,name=totalMarginBalance,proto3" json:"totalMarginBalance,omitempty"`
	TotalInitialMargin     string               `protobuf:"bytes,4,opt,name=totalInitialMargin,proto3" json:"totalInitialMargin,omitempty"`
	AccountType            string               `protobuf:"bytes,5,opt,name=accountType,proto3" json:"accountType,omitempty"`
	TotalAvailableBalance  string               `protobuf:"bytes,6,opt,name=totalAvailableBalance,proto3" json:"totalAvailableBalance,omitempty"`
	AccountMMRate          string               `protobuf:"bytes,7,opt,name=accountMMRate,proto3" json:"accountMMRate,omitempty"`
	TotalPerpUPL           string               `protobuf:"bytes,8,opt,name=totalPerpUPL,proto3" json:"totalPerpUPL,omitempty"`
	TotalWalletBalance     string               `protobuf:"bytes,9,opt,name=totalWalletBalance,proto3" json:"totalWalletBalance,omitempty"`
	AccountLTV             string               `protobuf:"bytes,10,opt,name=accountLTV,proto3" json:"accountLTV,omitempty"`
	TotalMaintenanceMargin string               `protobuf:"bytes,11,opt,name=totalMaintenanceMargin,proto3" json:"totalMaintenanceMargin,omitempty"`
	Coin                   []*WalletBalanceCoin `protobuf:"bytes,12,rep,name=coin,proto3" json:"coin,omitempty"`
}

func (x *WalletBalanceList) Reset() {
	*x = WalletBalanceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceList) ProtoMessage() {}

func (x *WalletBalanceList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceList.ProtoReflect.Descriptor instead.
func (*WalletBalanceList) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{5}
}

func (x *WalletBalanceList) GetTotalEquity() string {
	if x != nil {
		return x.TotalEquity
	}
	return ""
}

func (x *WalletBalanceList) GetAccountIMRate() string {
	if x != nil {
		return x.AccountIMRate
	}
	return ""
}

func (x *WalletBalanceList) GetTotalMarginBalance() string {
	if x != nil {
		return x.TotalMarginBalance
	}
	return ""
}

func (x *WalletBalanceList) GetTotalInitialMargin() string {
	if x != nil {
		return x.TotalInitialMargin
	}
	return ""
}

func (x *WalletBalanceList) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *WalletBalanceList) GetTotalAvailableBalance() string {
	if x != nil {
		return x.TotalAvailableBalance
	}
	return ""
}

func (x *WalletBalanceList) GetAccountMMRate() string {
	if x != nil {
		return x.AccountMMRate
	}
	return ""
}

func (x *WalletBalanceList) GetTotalPerpUPL() string {
	if x != nil {
		return x.TotalPerpUPL
	}
	return ""
}

func (x *WalletBalanceList) GetTotalWalletBalance() string {
	if x != nil {
		return x.TotalWalletBalance
	}
	return ""
}

func (x *WalletBalanceList) GetAccountLTV() string {
	if x != nil {
		return x.AccountLTV
	}
	return ""
}

func (x *WalletBalanceList) GetTotalMaintenanceMargin() string {
	if x != nil {
		return x.TotalMaintenanceMargin
	}
	return ""
}

func (x *WalletBalanceList) GetCoin() []*WalletBalanceCoin {
	if x != nil {
		return x.Coin
	}
	return nil
}

type WalletBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *CommonResponse      `protobuf:"bytes,1,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
	List           []*WalletBalanceList `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *WalletBalanceResponse) Reset() {
	*x = WalletBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceResponse) ProtoMessage() {}

func (x *WalletBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceResponse.ProtoReflect.Descriptor instead.
func (*WalletBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{6}
}

func (x *WalletBalanceResponse) GetCommonResponse() *CommonResponse {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

func (x *WalletBalanceResponse) GetList() []*WalletBalanceList {
	if x != nil {
		return x.List
	}
	return nil
}

type GetWalletBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance *WalletBalanceResponse `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetWalletBalanceResponse) Reset() {
	*x = GetWalletBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceResponse) ProtoMessage() {}

func (x *GetWalletBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{7}
}

func (x *GetWalletBalanceResponse) GetBalance() *WalletBalanceResponse {
	if x != nil {
		return x.Balance
	}
	return nil
}

type TickerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange     string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	TickerSymbol string `protobuf:"bytes,2,opt,name=tickerSymbol,proto3" json:"tickerSymbol,omitempty"`
}

func (x *TickerRequest) Reset() {
	*x = TickerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerRequest) ProtoMessage() {}

func (x *TickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerRequest.ProtoReflect.Descriptor instead.
func (*TickerRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{8}
}

func (x *TickerRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *TickerRequest) GetTickerSymbol() string {
	if x != nil {
		return x.TickerSymbol
	}
	return ""
}

type TickerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TickerResponse) Reset() {
	*x = TickerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerResponse) ProtoMessage() {}

func (x *TickerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerResponse.ProtoReflect.Descriptor instead.
func (*TickerResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{9}
}

func (x *TickerResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetSubDepositAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin        string `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	ChainType   string `protobuf:"bytes,2,opt,name=chainType,proto3" json:"chainType,omitempty"`
	SubMemberId string `protobuf:"bytes,3,opt,name=subMemberId,proto3" json:"subMemberId,omitempty"`
	Exchange    string `protobuf:"bytes,4,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *GetSubDepositAddressRequest) Reset() {
	*x = GetSubDepositAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepositAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepositAddressRequest) ProtoMessage() {}

func (x *GetSubDepositAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepositAddressRequest.ProtoReflect.Descriptor instead.
func (*GetSubDepositAddressRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubDepositAddressRequest) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *GetSubDepositAddressRequest) GetChainType() string {
	if x != nil {
		return x.ChainType
	}
	return ""
}

func (x *GetSubDepositAddressRequest) GetSubMemberId() string {
	if x != nil {
		return x.SubMemberId
	}
	return ""
}

func (x *GetSubDepositAddressRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type GetSubDepositAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Tag     string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetSubDepositAddressResponse) Reset() {
	*x = GetSubDepositAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubDepositAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubDepositAddressResponse) ProtoMessage() {}

func (x *GetSubDepositAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubDepositAddressResponse.ProtoReflect.Descriptor instead.
func (*GetSubDepositAddressResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{11}
}

func (x *GetSubDepositAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetSubDepositAddressResponse) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type AccountCoinsBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId    string `protobuf:"bytes,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	AccountType string `protobuf:"bytes,2,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Coin        string `protobuf:"bytes,3,opt,name=coin,proto3" json:"coin,omitempty"`
	WithBonus   int64  `protobuf:"varint,4,opt,name=withBonus,proto3" json:"withBonus,omitempty"`
	Exchange    string `protobuf:"bytes,5,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *AccountCoinsBalanceRequest) Reset() {
	*x = AccountCoinsBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCoinsBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCoinsBalanceRequest) ProtoMessage() {}

func (x *AccountCoinsBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCoinsBalanceRequest.ProtoReflect.Descriptor instead.
func (*AccountCoinsBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{12}
}

func (x *AccountCoinsBalanceRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *AccountCoinsBalanceRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *AccountCoinsBalanceRequest) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *AccountCoinsBalanceRequest) GetWithBonus() int64 {
	if x != nil {
		return x.WithBonus
	}
	return 0
}

func (x *AccountCoinsBalanceRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type AccountCoinsBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinBalances []*CoinBalance `protobuf:"bytes,1,rep,name=coinBalances,proto3" json:"coinBalances,omitempty"`
}

func (x *AccountCoinsBalanceResponse) Reset() {
	*x = AccountCoinsBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCoinsBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCoinsBalanceResponse) ProtoMessage() {}

func (x *AccountCoinsBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCoinsBalanceResponse.ProtoReflect.Descriptor instead.
func (*AccountCoinsBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{13}
}

func (x *AccountCoinsBalanceResponse) GetCoinBalances() []*CoinBalance {
	if x != nil {
		return x.CoinBalances
	}
	return nil
}

type CoinBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin            string `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	WalletBalance   string `protobuf:"bytes,2,opt,name=walletBalance,proto3" json:"walletBalance,omitempty"`
	TransferBalance string `protobuf:"bytes,3,opt,name=transferBalance,proto3" json:"transferBalance,omitempty"`
	Bonus           string `protobuf:"bytes,4,opt,name=bonus,proto3" json:"bonus,omitempty"`
}

func (x *CoinBalance) Reset() {
	*x = CoinBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinBalance) ProtoMessage() {}

func (x *CoinBalance) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinBalance.ProtoReflect.Descriptor instead.
func (*CoinBalance) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{14}
}

func (x *CoinBalance) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *CoinBalance) GetWalletBalance() string {
	if x != nil {
		return x.WalletBalance
	}
	return ""
}

func (x *CoinBalance) GetTransferBalance() string {
	if x != nil {
		return x.TransferBalance
	}
	return ""
}

func (x *CoinBalance) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

type WithdrawalRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange     string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Coin         string `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
	WithdrawId   string `protobuf:"bytes,3,opt,name=withdrawId,proto3" json:"withdrawId,omitempty"`
	WithdrawType int32  `protobuf:"varint,4,opt,name=withdrawType,proto3" json:"withdrawType,omitempty"`
	StartTime    int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit        int32  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor       string `protobuf:"bytes,8,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *WithdrawalRecordsRequest) Reset() {
	*x = WithdrawalRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalRecordsRequest) ProtoMessage() {}

func (x *WithdrawalRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalRecordsRequest.ProtoReflect.Descriptor instead.
func (*WithdrawalRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{15}
}

func (x *WithdrawalRecordsRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *WithdrawalRecordsRequest) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *WithdrawalRecordsRequest) GetWithdrawId() string {
	if x != nil {
		return x.WithdrawId
	}
	return ""
}

func (x *WithdrawalRecordsRequest) GetWithdrawType() int32 {
	if x != nil {
		return x.WithdrawType
	}
	return 0
}

func (x *WithdrawalRecordsRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *WithdrawalRecordsRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WithdrawalRecordsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *WithdrawalRecordsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type WithdrawalRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin              string `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Chain             string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Amount            string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TxID              string `protobuf:"bytes,4,opt,name=txID,proto3" json:"txID,omitempty"`
	Status            string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ToAddress         string `protobuf:"bytes,6,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Tag               string `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag,omitempty"`
	DepositFee        string `protobuf:"bytes,8,opt,name=depositFee,proto3" json:"depositFee,omitempty"`
	CreateTime        string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime        string `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	WithdrawId        string `protobuf:"bytes,11,opt,name=withdrawId,proto3" json:"withdrawId,omitempty"`
	WithdrawType      int32  `protobuf:"varint,12,opt,name=withdrawType,proto3" json:"withdrawType,omitempty"`
	Confirmations     string `protobuf:"bytes,13,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	TxIndex           string `protobuf:"bytes,14,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
	BlockHash         string `protobuf:"bytes,15,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BatchReleaseLimit string `protobuf:"bytes,16,opt,name=batchReleaseLimit,proto3" json:"batchReleaseLimit,omitempty"`
	DepositType       string `protobuf:"bytes,17,opt,name=depositType,proto3" json:"depositType,omitempty"`
}

func (x *WithdrawalRecord) Reset() {
	*x = WithdrawalRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalRecord) ProtoMessage() {}

func (x *WithdrawalRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalRecord.ProtoReflect.Descriptor instead.
func (*WithdrawalRecord) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{16}
}

func (x *WithdrawalRecord) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *WithdrawalRecord) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *WithdrawalRecord) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WithdrawalRecord) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *WithdrawalRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WithdrawalRecord) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *WithdrawalRecord) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *WithdrawalRecord) GetDepositFee() string {
	if x != nil {
		return x.DepositFee
	}
	return ""
}

func (x *WithdrawalRecord) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *WithdrawalRecord) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *WithdrawalRecord) GetWithdrawId() string {
	if x != nil {
		return x.WithdrawId
	}
	return ""
}

func (x *WithdrawalRecord) GetWithdrawType() int32 {
	if x != nil {
		return x.WithdrawType
	}
	return 0
}

func (x *WithdrawalRecord) GetConfirmations() string {
	if x != nil {
		return x.Confirmations
	}
	return ""
}

func (x *WithdrawalRecord) GetTxIndex() string {
	if x != nil {
		return x.TxIndex
	}
	return ""
}

func (x *WithdrawalRecord) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *WithdrawalRecord) GetBatchReleaseLimit() string {
	if x != nil {
		return x.BatchReleaseLimit
	}
	return ""
}

func (x *WithdrawalRecord) GetDepositType() string {
	if x != nil {
		return x.DepositType
	}
	return ""
}

type WithdrawalRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *CommonResponse     `protobuf:"bytes,1,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
	Rows           []*WithdrawalRecord `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	NextPageCursor string              `protobuf:"bytes,3,opt,name=nextPageCursor,proto3" json:"nextPageCursor,omitempty"`
}

func (x *WithdrawalRecordsResponse) Reset() {
	*x = WithdrawalRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalRecordsResponse) ProtoMessage() {}

func (x *WithdrawalRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalRecordsResponse.ProtoReflect.Descriptor instead.
func (*WithdrawalRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{17}
}

func (x *WithdrawalRecordsResponse) GetCommonResponse() *CommonResponse {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

func (x *WithdrawalRecordsResponse) GetRows() []*WithdrawalRecord {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *WithdrawalRecordsResponse) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	Time    string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{18}
}

func (x *CommonResponse) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *CommonResponse) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *CommonResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type WithdrawableAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Coin     string `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *WithdrawableAmountRequest) Reset() {
	*x = WithdrawableAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawableAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawableAmountRequest) ProtoMessage() {}

func (x *WithdrawableAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawableAmountRequest.ProtoReflect.Descriptor instead.
func (*WithdrawableAmountRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{19}
}

func (x *WithdrawableAmountRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *WithdrawableAmountRequest) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

type WithdrawableAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin               string `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	WithdrawableAmount string `protobuf:"bytes,2,opt,name=withdrawableAmount,proto3" json:"withdrawableAmount,omitempty"`
	AvailableBalance   string `protobuf:"bytes,3,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"`
}

func (x *WithdrawableAmount) Reset() {
	*x = WithdrawableAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawableAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawableAmount) ProtoMessage() {}

func (x *WithdrawableAmount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawableAmount.ProtoReflect.Descriptor instead.
func (*WithdrawableAmount) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{20}
}

func (x *WithdrawableAmount) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *WithdrawableAmount) GetWithdrawableAmount() string {
	if x != nil {
		return x.WithdrawableAmount
	}
	return ""
}

func (x *WithdrawableAmount) GetAvailableBalance() string {
	if x != nil {
		return x.AvailableBalance
	}
	return ""
}

type WithdrawableAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitAmountUsd      string                         `protobuf:"bytes,1,opt,name=limitAmountUsd,proto3" json:"limitAmountUsd,omitempty"`
	WithdrawableAmounts map[string]*WithdrawableAmount `protobuf:"bytes,2,rep,name=withdrawableAmounts,proto3" json:"withdrawableAmounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WithdrawableAmountResponse) Reset() {
	*x = WithdrawableAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawableAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawableAmountResponse) ProtoMessage() {}

func (x *WithdrawableAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawableAmountResponse.ProtoReflect.Descriptor instead.
func (*WithdrawableAmountResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{21}
}

func (x *WithdrawableAmountResponse) GetLimitAmountUsd() string {
	if x != nil {
		return x.LimitAmountUsd
	}
	return ""
}

func (x *WithdrawableAmountResponse) GetWithdrawableAmounts() map[string]*WithdrawableAmount {
	if x != nil {
		return x.WithdrawableAmounts
	}
	return nil
}

type CreateWithdrawalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin        string `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Chain       string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Address     string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Tag         string `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	Amount      string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp   int64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ForceChain  int32  `protobuf:"varint,7,opt,name=forceChain,proto3" json:"forceChain,omitempty"`
	AccountType string `protobuf:"bytes,8,opt,name=accountType,proto3" json:"accountType,omitempty"`
	Exchange    string `protobuf:"bytes,9,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *CreateWithdrawalRequest) Reset() {
	*x = CreateWithdrawalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWithdrawalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWithdrawalRequest) ProtoMessage() {}

func (x *CreateWithdrawalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWithdrawalRequest.ProtoReflect.Descriptor instead.
func (*CreateWithdrawalRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{22}
}

func (x *CreateWithdrawalRequest) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CreateWithdrawalRequest) GetForceChain() int32 {
	if x != nil {
		return x.ForceChain
	}
	return 0
}

func (x *CreateWithdrawalRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *CreateWithdrawalRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type CreateWithdrawalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateWithdrawalResponse) Reset() {
	*x = CreateWithdrawalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWithdrawalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWithdrawalResponse) ProtoMessage() {}

func (x *CreateWithdrawalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWithdrawalResponse.ProtoReflect.Descriptor instead.
func (*CreateWithdrawalResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{23}
}

func (x *CreateWithdrawalResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SubMemberDepositRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin              string `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Chain             string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Amount            string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TxID              string `protobuf:"bytes,4,opt,name=txID,proto3" json:"txID,omitempty"`
	Status            string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ToAddress         string `protobuf:"bytes,6,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Tag               string `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag,omitempty"`
	DepositFee        string `protobuf:"bytes,8,opt,name=depositFee,proto3" json:"depositFee,omitempty"`
	CreateTime        string `protobuf:"bytes,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime        string `protobuf:"bytes,10,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DepositId         string `protobuf:"bytes,11,opt,name=depositId,proto3" json:"depositId,omitempty"`
	Confirmations     string `protobuf:"bytes,13,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	TxIndex           string `protobuf:"bytes,14,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
	BlockHash         string `protobuf:"bytes,15,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BatchReleaseLimit string `protobuf:"bytes,16,opt,name=batchReleaseLimit,proto3" json:"batchReleaseLimit,omitempty"`
	DepositType       string `protobuf:"bytes,17,opt,name=depositType,proto3" json:"depositType,omitempty"`
}

func (x *SubMemberDepositRecord) Reset() {
	*x = SubMemberDepositRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubMemberDepositRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubMemberDepositRecord) ProtoMessage() {}

func (x *SubMemberDepositRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubMemberDepositRecord.ProtoReflect.Descriptor instead.
func (*SubMemberDepositRecord) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{24}
}

func (x *SubMemberDepositRecord) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *SubMemberDepositRecord) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SubMemberDepositRecord) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SubMemberDepositRecord) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *SubMemberDepositRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SubMemberDepositRecord) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *SubMemberDepositRecord) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SubMemberDepositRecord) GetDepositFee() string {
	if x != nil {
		return x.DepositFee
	}
	return ""
}

func (x *SubMemberDepositRecord) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SubMemberDepositRecord) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *SubMemberDepositRecord) GetDepositId() string {
	if x != nil {
		return x.DepositId
	}
	return ""
}

func (x *SubMemberDepositRecord) GetConfirmations() string {
	if x != nil {
		return x.Confirmations
	}
	return ""
}

func (x *SubMemberDepositRecord) GetTxIndex() string {
	if x != nil {
		return x.TxIndex
	}
	return ""
}

func (x *SubMemberDepositRecord) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *SubMemberDepositRecord) GetBatchReleaseLimit() string {
	if x != nil {
		return x.BatchReleaseLimit
	}
	return ""
}

func (x *SubMemberDepositRecord) GetDepositType() string {
	if x != nil {
		return x.DepositType
	}
	return ""
}

type SubWithdrawalRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResponse *CommonResponse           `protobuf:"bytes,1,opt,name=commonResponse,proto3" json:"commonResponse,omitempty"`
	NextPageCursor string                    `protobuf:"bytes,2,opt,name=nextPageCursor,proto3" json:"nextPageCursor,omitempty"`
	Rows           []*SubMemberDepositRecord `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *SubWithdrawalRecordsResponse) Reset() {
	*x = SubWithdrawalRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubWithdrawalRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubWithdrawalRecordsResponse) ProtoMessage() {}

func (x *SubWithdrawalRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubWithdrawalRecordsResponse.ProtoReflect.Descriptor instead.
func (*SubWithdrawalRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{25}
}

func (x *SubWithdrawalRecordsResponse) GetCommonResponse() *CommonResponse {
	if x != nil {
		return x.CommonResponse
	}
	return nil
}

func (x *SubWithdrawalRecordsResponse) GetNextPageCursor() string {
	if x != nil {
		return x.NextPageCursor
	}
	return ""
}

func (x *SubWithdrawalRecordsResponse) GetRows() []*SubMemberDepositRecord {
	if x != nil {
		return x.Rows
	}
	return nil
}

type SubWithdrawalRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubMemberId string `protobuf:"bytes,1,opt,name=subMemberId,proto3" json:"subMemberId,omitempty"`
	Coin        string `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
	Exchange    string `protobuf:"bytes,3,opt,name=exchange,proto3" json:"exchange,omitempty"`
	StartTime   int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime     int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Limit       int32  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor      string `protobuf:"bytes,8,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *SubWithdrawalRecordsRequest) Reset() {
	*x = SubWithdrawalRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exchange_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubWithdrawalRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubWithdrawalRecordsRequest) ProtoMessage() {}

func (x *SubWithdrawalRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exchange_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubWithdrawalRecordsRequest.ProtoReflect.Descriptor instead.
func (*SubWithdrawalRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_exchange_proto_rawDescGZIP(), []int{26}
}

func (x *SubWithdrawalRecordsRequest) GetSubMemberId() string {
	if x != nil {
		return x.SubMemberId
	}
	return ""
}

func (x *SubWithdrawalRecordsRequest) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *SubWithdrawalRecordsRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *SubWithdrawalRecordsRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SubWithdrawalRecordsRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SubWithdrawalRecordsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SubWithdrawalRecordsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

var File_proto_exchange_proto protoreflect.FileDescriptor

var file_proto_exchange_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0x2e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0x75, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa3,
	0x05, 0x0a, 0x11, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x6f, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x42, 0x6f, 0x72, 0x72,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x72,
	0x75, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x4d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x4d, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x4d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x4d, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x6c,
	0x69, 0x73, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70, 0x6f, 0x74,
	0x48, 0x65, 0x64, 0x67, 0x69, 0x6e, 0x67, 0x51, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x70, 0x6f, 0x74, 0x48, 0x65, 0x64, 0x67, 0x69, 0x6e, 0x67, 0x51, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x4d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x4d, 0x12, 0x24,
	0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x6d, 0x52, 0x65, 0x61, 0x6c, 0x69,
	0x73, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75,
	0x6d, 0x52, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x22, 0x96, 0x04, 0x0a, 0x11, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x4d, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x4d, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x4d, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x4d, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x70, 0x55, 0x50, 0x4c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x72,
	0x70, 0x55, 0x50, 0x4c, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x54, 0x56, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x54, 0x56, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x8a, 0x01,
	0x0a, 0x15, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x4f, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x22, 0x24, 0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75,
	0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x22, 0xa8, 0x01, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x69, 0x74, 0x68, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0x58, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x69,
	0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x0b, 0x43, 0x6f,
	0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x22, 0xf4, 0x01, 0x0a, 0x18, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x82, 0x04, 0x0a, 0x10, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x2c, 0x0a, 0x11, 0x62, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xb5, 0x01, 0x0a, 0x19, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x56, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0x4b, 0x0a, 0x19, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x84, 0x01, 0x0a,
	0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x9b, 0x02, 0x0a, 0x1a, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x73, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x64, 0x12, 0x6f, 0x0a, 0x13, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x64, 0x0a, 0x18, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x83, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xe2, 0x03, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x1c, 0x53, 0x75, 0x62,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x62,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x1b, 0x53, 0x75,
	0x62, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x32, 0xd3, 0x06, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x21, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x24, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x22, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_exchange_proto_rawDescOnce sync.Once
	file_proto_exchange_proto_rawDescData = file_proto_exchange_proto_rawDesc
)

func file_proto_exchange_proto_rawDescGZIP() []byte {
	file_proto_exchange_proto_rawDescOnce.Do(func() {
		file_proto_exchange_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_exchange_proto_rawDescData)
	})
	return file_proto_exchange_proto_rawDescData
}

var file_proto_exchange_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_proto_exchange_proto_goTypes = []interface{}{
	(*GetTradesRequest)(nil),             // 0: exchange.GetTradesRequest
	(*Trade)(nil),                        // 1: exchange.Trade
	(*GetTradesResponse)(nil),            // 2: exchange.GetTradesResponse
	(*GetWalletBalanceRequest)(nil),      // 3: exchange.GetWalletBalanceRequest
	(*WalletBalanceCoin)(nil),            // 4: exchange.WalletBalanceCoin
	(*WalletBalanceList)(nil),            // 5: exchange.WalletBalanceList
	(*WalletBalanceResponse)(nil),        // 6: exchange.WalletBalanceResponse
	(*GetWalletBalanceResponse)(nil),     // 7: exchange.GetWalletBalanceResponse
	(*TickerRequest)(nil),                // 8: exchange.TickerRequest
	(*TickerResponse)(nil),               // 9: exchange.TickerResponse
	(*GetSubDepositAddressRequest)(nil),  // 10: exchange.GetSubDepositAddressRequest
	(*GetSubDepositAddressResponse)(nil), // 11: exchange.GetSubDepositAddressResponse
	(*AccountCoinsBalanceRequest)(nil),   // 12: exchange.AccountCoinsBalanceRequest
	(*AccountCoinsBalanceResponse)(nil),  // 13: exchange.AccountCoinsBalanceResponse
	(*CoinBalance)(nil),                  // 14: exchange.CoinBalance
	(*WithdrawalRecordsRequest)(nil),     // 15: exchange.WithdrawalRecordsRequest
	(*WithdrawalRecord)(nil),             // 16: exchange.WithdrawalRecord
	(*WithdrawalRecordsResponse)(nil),    // 17: exchange.WithdrawalRecordsResponse
	(*CommonResponse)(nil),               // 18: exchange.CommonResponse
	(*WithdrawableAmountRequest)(nil),    // 19: exchange.WithdrawableAmountRequest
	(*WithdrawableAmount)(nil),           // 20: exchange.WithdrawableAmount
	(*WithdrawableAmountResponse)(nil),   // 21: exchange.WithdrawableAmountResponse
	(*CreateWithdrawalRequest)(nil),      // 22: exchange.CreateWithdrawalRequest
	(*CreateWithdrawalResponse)(nil),     // 23: exchange.CreateWithdrawalResponse
	(*SubMemberDepositRecord)(nil),       // 24: exchange.SubMemberDepositRecord
	(*SubWithdrawalRecordsResponse)(nil), // 25: exchange.SubWithdrawalRecordsResponse
	(*SubWithdrawalRecordsRequest)(nil),  // 26: exchange.SubWithdrawalRecordsRequest
	nil,                                  // 27: exchange.WithdrawableAmountResponse.WithdrawableAmountsEntry
}
var file_proto_exchange_proto_depIdxs = []int32{
	1,  // 0: exchange.GetTradesResponse.trades:type_name -> exchange.Trade
	4,  // 1: exchange.WalletBalanceList.coin:type_name -> exchange.WalletBalanceCoin
	18, // 2: exchange.WalletBalanceResponse.commonResponse:type_name -> exchange.CommonResponse
	5,  // 3: exchange.WalletBalanceResponse.list:type_name -> exchange.WalletBalanceList
	6,  // 4: exchange.GetWalletBalanceResponse.balance:type_name -> exchange.WalletBalanceResponse
	14, // 5: exchange.AccountCoinsBalanceResponse.coinBalances:type_name -> exchange.CoinBalance
	18, // 6: exchange.WithdrawalRecordsResponse.commonResponse:type_name -> exchange.CommonResponse
	16, // 7: exchange.WithdrawalRecordsResponse.rows:type_name -> exchange.WithdrawalRecord
	27, // 8: exchange.WithdrawableAmountResponse.withdrawableAmounts:type_name -> exchange.WithdrawableAmountResponse.WithdrawableAmountsEntry
	18, // 9: exchange.SubWithdrawalRecordsResponse.commonResponse:type_name -> exchange.CommonResponse
	24, // 10: exchange.SubWithdrawalRecordsResponse.rows:type_name -> exchange.SubMemberDepositRecord
	20, // 11: exchange.WithdrawableAmountResponse.WithdrawableAmountsEntry.value:type_name -> exchange.WithdrawableAmount
	0,  // 12: exchange.ExchangeService.GetTrades:input_type -> exchange.GetTradesRequest
	3,  // 13: exchange.ExchangeService.GetWalletBalance:input_type -> exchange.GetWalletBalanceRequest
	8,  // 14: exchange.ExchangeService.StreamTickerData:input_type -> exchange.TickerRequest
	10, // 15: exchange.ExchangeService.GetSubDepositAddress:input_type -> exchange.GetSubDepositAddressRequest
	12, // 16: exchange.ExchangeService.GetAccountCoinsBalance:input_type -> exchange.AccountCoinsBalanceRequest
	15, // 17: exchange.ExchangeService.GetWithdrawalRecords:input_type -> exchange.WithdrawalRecordsRequest
	19, // 18: exchange.ExchangeService.GetWithdrawableAmount:input_type -> exchange.WithdrawableAmountRequest
	22, // 19: exchange.ExchangeService.CreateWithdrawal:input_type -> exchange.CreateWithdrawalRequest
	26, // 20: exchange.ExchangeService.GetSubWithdrawalRecords:input_type -> exchange.SubWithdrawalRecordsRequest
	2,  // 21: exchange.ExchangeService.GetTrades:output_type -> exchange.GetTradesResponse
	7,  // 22: exchange.ExchangeService.GetWalletBalance:output_type -> exchange.GetWalletBalanceResponse
	9,  // 23: exchange.ExchangeService.StreamTickerData:output_type -> exchange.TickerResponse
	11, // 24: exchange.ExchangeService.GetSubDepositAddress:output_type -> exchange.GetSubDepositAddressResponse
	13, // 25: exchange.ExchangeService.GetAccountCoinsBalance:output_type -> exchange.AccountCoinsBalanceResponse
	17, // 26: exchange.ExchangeService.GetWithdrawalRecords:output_type -> exchange.WithdrawalRecordsResponse
	21, // 27: exchange.ExchangeService.GetWithdrawableAmount:output_type -> exchange.WithdrawableAmountResponse
	23, // 28: exchange.ExchangeService.CreateWithdrawal:output_type -> exchange.CreateWithdrawalResponse
	25, // 29: exchange.ExchangeService.GetSubWithdrawalRecords:output_type -> exchange.SubWithdrawalRecordsResponse
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_exchange_proto_init() }
func file_proto_exchange_proto_init() {
	if File_proto_exchange_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_exchange_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceCoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubDepositAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubDepositAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCoinsBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCoinsBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawalRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawalRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawalRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawableAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawableAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawableAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWithdrawalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWithdrawalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubMemberDepositRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubWithdrawalRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exchange_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubWithdrawalRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_exchange_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_exchange_proto_goTypes,
		DependencyIndexes: file_proto_exchange_proto_depIdxs,
		MessageInfos:      file_proto_exchange_proto_msgTypes,
	}.Build()
	File_proto_exchange_proto = out.File
	file_proto_exchange_proto_rawDesc = nil
	file_proto_exchange_proto_goTypes = nil
	file_proto_exchange_proto_depIdxs = nil
}
